swagger: "2.0"

info:
  description: "Favorites ads user admin apis"
  version: "v1"
  title: "Avito favorites api"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "bennejarazakaria@gmail.com"

host: "__Base__URL"

securityDefinitions:
  basicAuth:
    type: basic

security:
  - basicAuth: []

basePath: "/"

tags:
- name: "/admin/users"
  description: "Everything about your favorites ads"

schemes:
- "https"
paths:
  /admin/users:
    post:
      tags:
      - "/admin/users"
      summary: "Add a new user"
      description: "create new user"
      operationId: "addUser"
      consumes:
      - "application/json"

      parameters:
        - in: body
          name: body
          description: "Message body that contains information about the email content"
          required: true
          schema:
            $ref: "#/definitions/CreateUser"
      responses:
        200:
          description: "successful operation"
        405:
          description: "Invalid input"
        401:
          description: "Unauthorized"
        500:
          description: "Error when trying to handle the request"

  /admin/users/{userId}:
    get:
      tags:
      - "/admin/users"
      summary: get user by id
      description: get user by id
      operationId: getUser
      produces:
        - application/json

      parameters:
        - in: path
          name: userId
          required: true
          type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: '#/definitions/User'
        401:
          description: "Unauthorized"
        404:
          description: "Resource not found"
        500:
          description: "Error when trying to handle the request"

    delete:
      tags:
      - "/admin/users"
      summary: remove user by id
      description: remove user by id
      operationId: removeUser

      parameters:
        - in: path
          name: userId
          required: true
          type: string
      responses:
        201:
          description: "successful operation"
          schema:
            $ref: '#/definitions/User'
        404:
          description: "Resource not found"
        401:
          description: "Unauthorized"
        500:
          description: "Error when trying to handle the request"

definitions:
  User:
    type: object
    required:
    - id
    - username
    properties:
      id:
        type: string
        example: "Hi swagger !"
      username:
        type: string
        example: "Hi swagger !"

  CreateUser:
    type: object
    required:
    - id
    - username
    properties:
      id:
        type: string
        example: "Hi swagger !"
      username:
        type: string
        example: "Hi swagger !"
      password:
        type: string
        example: "Hi swagger !"
